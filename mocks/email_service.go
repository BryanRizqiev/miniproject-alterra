// Code generated by mockery v2.34.2. DO NOT EDIT.

package mocks

import (
	global_entity "miniproject-alterra/module/global/entity"

	mock "github.com/stretchr/testify/mock"
)

// EmailService is an autogenerated mock type for the EmailServiceInterface type
type EmailService struct {
	mock.Mock
}

// SendEmail provides a mock function with given fields: sendEmailFormat
func (_m *EmailService) SendEmail(sendEmailFormat global_entity.SendEmailFormat) error {
	ret := _m.Called(sendEmailFormat)

	var r0 error
	if rf, ok := ret.Get(0).(func(global_entity.SendEmailFormat) error); ok {
		r0 = rf(sendEmailFormat)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEmailService creates a new instance of EmailService. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEmailService(t interface {
	mock.TestingT
	Cleanup(func())
}) *EmailService {
	mock := &EmailService{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
